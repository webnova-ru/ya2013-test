// simple if operator ------------------------
@isNone: '';
.isNone(@var, @trueValue, @falseValue) {
  @_trueValue: ~'@{trueValue}';
  @_falseValue: ~'@{falseValue}';
  @isNone: ~`("@{var}" == "none")? "@{_trueValue}": "@{_falseValue}"`;
}

@isTrue: '';
.isTrue(@var, @trueValue, @falseValue) {
  @_trueValue: ~'@{trueValue}';
  @_falseValue: ~'@{falseValue}';
  @isTrue: ~`("@{var}" == "true")? "@{_trueValue}": "@{_falseValue}"`;
}

// clearfix ----------------------------------
.clearFix() {
  *zoom: 1;
  &:after, &:before {
      display: table;
      content: "";
  }
  &:after {
      clear: both;
  }
}
//---------------------------------------------

// inline block for block element -------------
.inline-block() {
  display: inline-block;
  *display: inline;
  *zoom:1;
}
// ------------------------------------------

// size --------------------------------------
.size(@width: 0px, @height: 0px){
  width: @width;
  height: @height;
}
// -------------------------------------------

// side --------------------------------------
.side(@left: 0px, @top: 0px) {
  left: @left;
  top: @top;
}
// -------------------------------------------

// box-sizing ---------------------------------
.box-sizing(@type: border-box) {
  -moz-box-sizing: @type;
  -webkit-box-sizing: @type;
  -ms-box-sizing: @type;
  box-sizing: @type;
}
// -------------------------------------------

// border --------------------------------------
.border(@color: #CCC) {
  border: 1px solid @color;
}
// -------------------------------------------

// opacity ----------------------------------
.opacity(@opacity: 0.5) {
  @opacity_ie: @opacity * 100;
  filter: ~"alpha(opacity=@{opacity_ie})"; // IE 5-7
  -ms-filter: %("progid:DXImageTransform.Microsoft.Alpha(Opacity=%d)", @opacity_ie); // IE 8
  *zoom:1;
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
}
// -------------------------------------------

// triangle ----------------------------------
.triangle(@dir, @size: 4px, @color: #CCC) when(@dir = top){
  width: 0px;
  height: 0px;
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  border-bottom: @size solid @color;
}
.triangle(@dir, @size: 4px, @color: #CCC) when(@dir = bottom){
  width: 0px;
  height: 0px;
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  border-top: @size solid @color;
}
.triangle(@dir, @size: 4px, @color: #CCC) when(@dir = left){
  width: 0px;
  height: 0px;
  border-top: @size solid transparent;
  border-bottom: @size solid transparent;
  border-right: @size solid @color;
  border-left: @size solid transparent;
}
.triangle(@dir, @size: 4px, @color: #CCC) when(@dir = right){
  width: 0px;
  height: 0px;
  border-top: @size solid transparent;
  border-bottom: @size solid transparent;
  border-right: @size solid transparent;
  border-left: @size solid @color;
}
// -------------------------------------------

// round border ------------------------------
.round(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
  //-moz-background-clip: padding;
  //-webkit-background-clip: padding-box;
  //background-clip: padding-box;
}
.round-custom(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
}
.round-top-right(@val: 0) {
  -webkit-border-top-right-radius: @val;
  -moz-border-top-right-radius: @val;
  border-top-right-radius: @val;
}
.round-top-left(@val: 0) {
  -webkit-border-top-left-radius: @val;
  -moz-border-top-left-radius: @val;
  border-top-left-radius: @val;
}
.round-bottom-right(@val: 0) {
  -webkit-border-bottom-right-radius: @val;
  -moz-border-bottom-right-radius: @val;
  border-bottom-right-radius: @val;
}
.round-bottom-left(@val: 2px) {
  -webkit-border-bottom-left-radius: @val;
  -moz-border-bottom-left-radius: @val;
  border-bottom-left-radius: @val;
}

// -------------------------------------------

// shadow box --------------------------------
.shadow(@depth: 0 2px 1px rgba(0, 0, 0,.4)) {
  -webkit-box-shadow: @depth;
  -moz-box-shadow: @depth;
  -o-box-shadow: @depth;
  box-shadow: @depth;
}
.text-shadow(@color) {
  .isNone(@color, '', '0px 1px 0px');
  text-shadow: @isNone @color;
}
// -------------------------------------------

// Bottom-to-Top Gradient --------------------
.gradient(@end, @start) {
  background: (@start + @end) / 2; // Non CSS3 browsers get the average color
  background-image: -moz-linear-gradient(top,  @start, @end); // FF 3.6
  background-image: -webkit-gradient(linear, left top, left bottom, from(@start), to(@end)); // Safari 4+, Chrome
  background-image: -webkit-linear-gradient(top, @start, @end); // Chrome 10+, Safari 5.1+
  background-image: -o-linear-gradient(top, @start, @end); // Opera 11.10+
  background-image: linear-gradient(top, @start, @end); // CSS3
  filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr=%d, endColorstr=%d)", @start, @end); // IE6 & 7
  -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr=%d, endColorstr=%d)", @start, @end); // IE8
  background-image: -ms-linear-gradient(top, @start, @end); // IE10
  *zoom:1;
}
.grad(@color, @light: 20%, @isIncrease: true) when(@isIncrease = true) {
  @gradColorEnd: @color;
  @gradColorStart: lighten(@color, @light);
  .gradient(@gradColorEnd, @gradColorStart);
}
.grad(@color, @light: 20%, @isIncrease: true) when(@isIncrease = false) {
  @gradColorEnd: @color;
  @gradColorStart: darken(@color, @light);
  .gradient(@gradColorEnd, @gradColorStart);
}
// -------------------------------------------

// Sprites -----------------------------------
.sprite-helper(@x, @y, @grid_x, @grid_y) {
  background-position: -(@x * @grid_x - @grid_x) -(@y * @grid_y - @grid_y);
}
// -------------------------------------------

// transition --------------------------------
  .trans(@rule: all 0.5s ease-out) {
  -webkit-transition: @rule;
  -moz-transition: @rule;
  -ms-transition: @rule;
  -o-transition: @rule;
  transition: @rule;
}
.trans-prop(@prop: all) {
  -webkit-transition-property: @prop;
  -moz-transition-property: @prop;
  -ms-transition-property: @prop;
  -o-transition-property: @prop;
  transition-property: @prop;
}
.trans-time(@duration: 500ms) {
  -webkit-transition-duration: @duration;
  -moz-transition-duration: @duration;
  -ms-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}
.trans-function(@fun: ease-out) {
  -webkit-transition-timing-function: @fun;
  -moz-transition-timing-function: @fun;
  -ms-transition-timing-function: @fun;
  -o-transition-timing-function: @fun;
  transition-timing-function: @fun;
}
.trans-origin(@x: 50%, @y: 50%) {
  -webkit-transform-origin: @x @y;
  -moz-transform-origin: @x @y;
  -ms-transform-origin: @x @y;
  -o-transform-origin: @x @y;
  transform-origin: @x @y;
}
.tarns-style(@val:preserve-3d) {
  -webkit-transform-style: @val;
  -moz-transform-style: @val;
  -ms-transform-style: @val;
  transform-style: @val;
}

// ------------------------------------------

// perspective --------------------------------
.perspective(@val:800px) {
  -webkit-perspective:@val;
  -moz-perspective:@val;
  -ms-perspective:@val;
  perspective: @val;
}
.perspective-origin(@x:50%, @y:50%) {
  -webkit-perspective-origin:@x @y;
  -moz-perspective-origin:@x @y;
  -ms-perspective-origin:@x @y;
  perspective-origin:@x @y;
}
// ------------------------------------------

// transform --------------------------------
.transform(@val) {
  -webkit-transform:@val;
  -moz-transform:@val;
  -ms-transform:@val;
  transform:@val;
}
.rotate(@deg:45deg) {
  -webkit-transform:rotate(@deg);
  -moz-transform:rotate(@deg);
  transform:rotate(@deg);
}
.rotateX(@deg:45deg) {
  -webkit-transform:rotateX(@deg);
  -moz-transform:rotateX(@deg);
  transform:rotateX(@deg);
}
.rotateY(@deg:45deg) {
  -webkit-transform:rotateY(@deg);
  -moz-transform:rotateY(@deg);
  transform:rotateY(@deg);
}
.rotateZ(@deg:45deg) {
  -webkit-transform:rotateZ(@deg);
  -moz-transform:rotateZ(@deg);
  transform:rotateZ(@deg);
}

.translate(@x:0px, @y:0px) {
  -webkit-transform:translate(@x, @y);
  -moz-transform:translate(@x, @y);
  transform:translate(@x, @y);
}
.translateX(@x:0px) {
  -webkit-transform:translate(@x);
  -moz-transform:translate(@x);
  transform:translate(@x);
}
.translate3d(@x, @y, @z) {
  -webkit-transform:translate3d(@x, @y, @z);
  -moz-transform:translate3d(@x, @y, @z);
  transform:translate3d(@x, @y, @z);
}

.scale(@ratio:1.5) {
  -webkit-transform:scale(@ratio);
  -moz-transform:scale(@ratio);
  transform:scale(@ratio);
}
.skew(@deg:5deg) {
  -webkit-transform:skew(@deg);
  -moz-transform:skew(@deg);
  transform:skew(@deg);
}
// -------------------------------------------

// animations --------------------------------
.an-shake() {
  .shake() {
    0%, 100% {
      .translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
      .translateX(-10px);
    }
    20%, 40%, 60%, 80% {
      .translateX(10px);
    }
  }
  @-webkit-keyframes shake {.shake();}
  @-moz-keyframes shake {.shake();}
  @-o-keyframes shake {.shake();}
  @keyframes shake {.shake();}
}
.an-fadeInRight() {
  .fadeInRight() {
    0% {
      opacity: 0;
      .translateX(@x:20px);

    }
    100% {
      opacity: 1;
      .translateX(0px);
    }
  }
  @-webkit-keyframes fadeInRight {.fadeInRight();}
  @-moz-keyframes fadeInRight {.fadeInRight();}
  @-o-keyframes fadeInRight {.fadeInRight();}
  @keyframes fadeInRight {.fadeInRight();}
}

.animation(@name, @duration:500ms, @delay:0s, @function:ease-in, @count:1, @direction:alternate, @mode: both) {
  -webkit-animation: @name @duration @function @delay @count @direction;
  -moz-animation: @name @duration @function @delay @count @direction;
  -ms-animation: @name @duration @function @delay @count @direction;
  -o-animation: @name @duration @function @delay @count @direction;
  animation: @name @duration @function @delay @count @direction;
  .anim-fill-mode(@mode);
}

.anim-name(@name) {
  -webkit-animation-name: @name;
  -moz-animation-name: @name;
  -ms-animation-name: @name;
  -o-animation-name: @name;
  animation-name: @name;
}
.anim-duration(@duration) {
  -webkit-animation-duration: @duration;
  -moz-animation-duration: @duration;
  -ms-animation-duration: @duration;
  -o-animation-duration: @duration;
  animation-duration: @duration;
}
.anim-iteration-count(@count) {
  -webkit-animation-iteration-count: @count;
  -moz-animation-iteration-count: @count;
  -ms-animation-iteration-count: @count;
  -o-animation-iteration-count: @count;
  animation-iteration-count: @count;
}
.anim-direction(@direction) {
  -webkit-animation-direction: @direction;
  -moz-animation-direction: @direction;
  -ms-animation-direction: @direction;
  -o-animation-direction: @direction;
  animation-direction: @direction;
}
.anim-trim-function(@function) {
  -webkit-animation-timing-function: @function;
  -moz-animation-timing-function: @function;
  -ms-animation-timing-function: @function;
  -o-animation-timing-function: @function;
  animation-timing-function: @function;
}
.anim-fill-mode (@mode) {
  -webkit-animation-fill-mode:@mode;
  -moz-animation-fill-mode:@mode;
  -o-animation-fill-mode:@mode;
  animation-fill-mode:@mode;
}
.anim-delay(@delay) {
  -webkit-animation-delay: @delay;
  -moz-animation-delay: @delay;
  -o-animation-delay: @delay;
  animation-delay: @delay;
}
// -------------------------------------------

// Behavior when user select
.user-select (@value: none) {
  @none: -moz-none;
  @text: text;
  @all: all;

  -webkit-user-select: @value;
  -moz-user-select: @value;
  -ms-user-select: @value;
  -o-user-select: @value;
  user-select: @value;
}

// Text wrap
.wrap() {
  word-wrap: break-word;
  white-space: pre-wrap;
  text-wrap: wrap;
}